trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Step 1: Install curl (if not already installed)
  - task: Bash@3
    displayName: 'Install curl'
    inputs:
      targetType: 'inline'
      script: |
        sudo apt-get update
        sudo apt-get install -y curl

  # Step 2: Get MuleSoft Access Token
  - task: Bash@3
    displayName: 'Get MuleSoft Access Token'
    inputs:
      targetType: 'inline'
      script: |
        # Define your MuleSoft client ID, client secret, and other necessary details
        CLIENT_ID="your-mulesoft-client-id"
        CLIENT_SECRET="your-mulesoft-client-secret"
        AUTH_URL="https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token"
        
        # Make the request to get the access token
        ACCESS_TOKEN=$(curl -X POST ${AUTH_URL} \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "grant_type=client_credentials" \
          -d "client_id=${CLIENT_ID}" \
          -d "client_secret=${CLIENT_SECRET}" | jq -r '.access_token')
        
        echo "##vso[task.setvariable variable=MuleSoftAccessToken;isOutput=true]$ACCESS_TOKEN"
        
  # Step 3: Use the Access Token in Subsequent Steps (Optional)
  - task: Bash@3
    displayName: 'Use MuleSoft Access Token'
    inputs:
      targetType: 'inline'
      script: |
        echo "Using MuleSoft Access Token: $(echo $MuleSoftAccessToken)"
        
    env:
      MuleSoftAccessToken: $(MuleSoftAccessToken)


# Step 3: Publish RAML to MuleSoft Exchange
  - task: Bash@3
    displayName: 'Publish RAML to MuleSoft Exchange'
    inputs:
      targetType: 'inline'
      script: |
        ACCESS_TOKEN=$(echo $(MuleSoftAccessToken))
        ORGANIZATION_ID="your-org-id"
        EXCHANGE_URL="https://anypoint.mulesoft.com/exchange/api/v2/organizations/${ORGANIZATION_ID}/assets"

        # Define RAML file details
        RAML_FILE_PATH="./api.raml"  # Path to your RAML file in the repo
        API_NAME="your-api-name"
        API_VERSION="1.0.0"
        API_GROUP_ID="your-api-group-id"

        # Construct payload to publish RAML
        curl -X POST ${EXCHANGE_URL} \
          -H "Authorization: Bearer ${ACCESS_TOKEN}" \
          -H "Content-Type: multipart/form-data" \
          -F "name=${API_NAME}" \
          -F "version=${API_VERSION}" \
          -F "groupId=${API_GROUP_ID}" \
          -F "mainFile=@${RAML_FILE_PATH}" \
          -F "classifier=raml" \
          -F "type=raml-fragment"
      
  # Optional Step: Confirm Success
  - task: Bash@3
    displayName: 'Confirm MuleSoft Exchange Upload'
    inputs:
      targetType: 'inline'
      script: |
        echo "RAML file has been published to MuleSoft Exchange."


# Convert file to Base64 and store in a variable
BASE64_FILE=$(base64 yourfile.txt)

# Make API request with the Base64 file in the JSON body
curl -X POST https://api.example.com/upload \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer your_access_token" \
  -d '{
        "file_name": "yourfile.txt",
        "file_data": "'"$BASE64_FILE"'"
      }'


